// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: control_center/control_center_models.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

/// 首页轮播图
public struct ControlCenter_HomepageResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// 封面图片信息列表，请按照回传顺序显示
  public var homepages: [ControlCenter_HomepageResponse.HomepageInfo] = []

  /// 上次更新的时间，秒级时间戳
  public var lastUpdateTime: UInt32 = 0

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public struct HomepageInfo {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    /// 封面图片地址
    public var imgURL: String = String()

    /// 点击后跳转类型，组织方式为"跳转目的:跳转参数",如，跳转markdown页面可以写为"md:https://www.xxxx.com"
    public var jumpURL: String = String()

    public var unknownFields = SwiftProtobuf.UnknownStorage()

    public init() {}
  }

  public init() {}
}

#if swift(>=5.5) && canImport(_Concurrency)
extension ControlCenter_HomepageResponse: @unchecked Sendable {}
extension ControlCenter_HomepageResponse.HomepageInfo: @unchecked Sendable {}
#endif  // swift(>=5.5) && canImport(_Concurrency)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "control_center"

extension ControlCenter_HomepageResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".HomepageResponse"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "homepages"),
    2: .standard(proto: "last_update_time"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeRepeatedMessageField(value: &self.homepages) }()
      case 2: try { try decoder.decodeSingularUInt32Field(value: &self.lastUpdateTime) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.homepages.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.homepages, fieldNumber: 1)
    }
    if self.lastUpdateTime != 0 {
      try visitor.visitSingularUInt32Field(value: self.lastUpdateTime, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: ControlCenter_HomepageResponse, rhs: ControlCenter_HomepageResponse) -> Bool {
    if lhs.homepages != rhs.homepages {return false}
    if lhs.lastUpdateTime != rhs.lastUpdateTime {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension ControlCenter_HomepageResponse.HomepageInfo: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = ControlCenter_HomepageResponse.protoMessageName + ".HomepageInfo"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "img_url"),
    2: .standard(proto: "jump_url"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularStringField(value: &self.imgURL) }()
      case 2: try { try decoder.decodeSingularStringField(value: &self.jumpURL) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.imgURL.isEmpty {
      try visitor.visitSingularStringField(value: self.imgURL, fieldNumber: 1)
    }
    if !self.jumpURL.isEmpty {
      try visitor.visitSingularStringField(value: self.jumpURL, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: ControlCenter_HomepageResponse.HomepageInfo, rhs: ControlCenter_HomepageResponse.HomepageInfo) -> Bool {
    if lhs.imgURL != rhs.imgURL {return false}
    if lhs.jumpURL != rhs.jumpURL {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
